#plans and discussion on the architecture.

= Main parts =

 * GUI
  ** This is the GUI. It has an OpenGL view of current GEO objects.
  ** menus and toolbars for performing CAD/CAM operations.
 * GEO
  ** This is a container (Object-database?) for all geometry objects.
  ** Simple GEO is Points, Lines, Triangles. They can be rendered by OpenGL and processed by CAM directly
  ** non-simple GEO is Circles, Arcs, Splines, Nurbs, Surfaces etc. These objects need to be tesselated into simpleGEO before rendering and/or CAM (with some exceptions)
  ** Toolpaths are also GEO objects. They consist of rapid feed, linear feed, arc feed.
 * CAM
  ** These are algorithms that take some input GEO objects and produce some output GEO objects
 * IO
  ** This is a library that can either read files and create GEO from them (import)
  ** or read GEO and write a file (export)
   ** ascii STL import already works
  ** note that a post-processor is a kind of export function. it takes a toolpath and represents it as g-code
 * TOOLLIB
  ** a library of cutting tools with associated parameters (cutter shapes, feed/tooth etc)
 * CUTSIM
  ** Cutting simulation/verification. Simple Z-map model is fairly easy to implement for 3-axis machining.


= Details =
Write more detailed descriptions of each component here.
Also discuss implementation issues such as applicable design patterns.

== GUI ==
== GEO ==

== IO ==
== TOOLLIB ==
== CUTSIM ==